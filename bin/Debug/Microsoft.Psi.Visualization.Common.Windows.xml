<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Psi.Visualization.Common.Windows</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Psi.Visualization.Base.ComObservableObject">
            <summary>
            Observable object base that replaces the standard common language runtime (CLR) free-threaded marshaler with the standard OLE STA marshaler.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Base.ComObservableObject.PropertyChanging">
            <inheritdoc />
        </member>
        <member name="E:Microsoft.Psi.Visualization.Base.ComObservableObject.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Base.ComObservableObject.RaisePropertyChanging(System.String)">
            <summary>
            Raises the property changing event.
            </summary>
            <param name="propertyName">The name of the property whose value is changing.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Base.ComObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            Raises the poerty changed event.
            </summary>
            <param name="propertyName">The name of the property whose value has changed.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Base.ComObservableObject.Set``1(System.String,``0@,``0)">
            <summary>
            Sets the value of the named property and raises the changing and changed events.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The name of the property whose value is being set.</param>
            <param name="member">The property to set the value on.</param>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2">
             <summary>
             Represents a dynamic data cache whose keys are embedded in the values and provides
             notifications when items get added, removed, or when the whole list is refreshed.
            
             The cache supports views onto the data. These views support changes to the underlying data
             and being updated by the underlying data.
            
             In future versions the underlying data will be to be released if there is no view present
             for a given data range.
             </summary>
             <typeparam name="TKey">The type of keys in the cache.</typeparam>
             <typeparam name="TItem">The type of items in the cache.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.keyComparer">
            <summary>
            The implementation of the <see cref="T:System.Collections.Generic.IComparer`1"/> generic interface to use when comparing keys.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.getKeyForItem">
            <summary>
            Function to extract key from item.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.pruneThreshold">
            <summary>
            Number of collection changed events recieved before pruning the cache.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.needsPruning">
            <summary>
            Flag indicating the cache needs to be pruned.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.collectionChangedCount">
            <summary>
            Number of collection changed events recieved, since last pruning of the cache.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.views">
            <summary>
            Dictionary of weakly held views indexed by start and end keys.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.#ctor(System.Func{`1,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2" /> class that uses the default comparers.
            </summary>
            <param name="getKeyForItem">Funtion that returns a key given an item.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="getKeyForItem"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.#ctor(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IComparer{`1},System.Func{`1,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2" /> class that uses the specified comparer.
            </summary>
            <param name="keyComparer">
            The implementation of the <see cref="T:System.Collections.Generic.IComparer`1"/> interface to use when comparing keys, or null to use
            the default comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.Comparer`1.Default"/>.
            </param>
            <param name="itemComparer">
            The implementation of the <see cref="T:System.Collections.Generic.IComparer`1"/> interface to use when comparing items, or null to use
            the default comparer for the type of the item, obtained from <see cref="P:System.Collections.Generic.Comparer`1.Default"/>.
            </param>
            <param name="getKeyForItem">Function that returns a key given an item.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="getKeyForItem"/> is null.</exception>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ViewExtents">
            <summary>
            Gets a list of extents (start and end keys) of views (both live as well as weak views whose items have not yet been purged).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.GetView(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{`0,`1}.ObservableKeyedView.ViewMode,`0,`0,System.UInt32,System.Func{`0,`0})">
            <summary>
            Gets a dynamic view of the underlying cache based on the parameters given.
            </summary>
            <param name="mode">View mode.</param>
            <param name="startKey">Start key of view.</param>
            <param name="endKey">End key of view.</param>
            <param name="tailCount">Number of items to include in view.</param>
            <param name="tailRange">Tail duration function. Takes last item's key and returns a new startKey.</param>
            <returns>An instance of <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView"/>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="startKey"/> must be less than or equal to <paramref name="endKey"/>.</exception>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.TryGetValue(`0,`1@)">
            <summary>
            Gets a value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the first value associated with the specified key, if the key is
            found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>true if a value with the specified key was found; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.PruneDeadViews">
            <summary>
            Cleanup the cache by removing dead views and pruning the underlying data.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.PruneCache">
            <summary>
            Walks views and prunes out dead (GC'd) views and the resulting unreferenced data.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView">
            <summary>
            Represents a dynamic data collection whose keys are embedded in the values and provides
            notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.IndexerName">
            <summary>
            Indexer name.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.cache">
            <summary>
            Underlying cache.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.endIndex">
            <summary>
            End index of the view.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.endKey">
            <summary>
            End key of the view.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.startIndex">
            <summary>
            Start index of the view.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.startKey">
            <summary>
            Start key of the view.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.mode">
            <summary>
            Mode of the view.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.tailCount">
            <summary>
            Tail count.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.tailRange">
            <summary>
            Tail duration function. Takes last item's key and returns a new startKey.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.#ctor(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{`0,`1},Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{`0,`1}.ObservableKeyedView.ViewMode,`0,`0,System.UInt32,System.Func{`0,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView"/> class.
            </summary>
            <param name="cache">Underlying cache.</param>
            <param name="mode">View mode.</param>
            <param name="startKey">Start key of the view.</param>
            <param name="endKey">End key of the view.</param>
            <param name="tailCount">Number of items to include in view.</param>
            <param name="tailRange">Tail duration function. Takes last item's key and returns a new startKey.</param>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            This event does not fire range based events for compatability to wpf controls. It turns adds into resets.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.DetailedCollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            This event does fire range based events for efficiency.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.ViewMode">
            <summary>
            Modes the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView"/> operates under.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.ViewMode.Fixed">
            <summary>
            Fixed view mode (default). View will stay fixed on start and end keys.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.ViewMode.TailCount">
            <summary>
            TailCount view mode. View will slide based on number of entries window.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.ViewMode.TailRange">
            <summary>
            TailRange view mode. View will slide based on time window.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Add(`1)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.AddRange(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView"/>.
            </summary>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView"/>.
            The collection itself cannot be null, but it can contain elements that are null, if type <typeparamref name="TItem"/> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Contains(`1)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.CopyTo(`1[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.IndexOf(`1)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Insert(System.Int32,`1)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.Remove(`1)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.CollectionChanged" /> event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Psi.Visualization.Collections.ObservableKeyedCache`2.ObservableKeyedView.PropertyChanged" /> event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1">
            <summary>
            Represents a dynamic data collection whose keys are embedded in the values and provides
            notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.DefaultCapacity">
            <summary>
            Default initial collection capacity.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.IndexerName">
            <summary>
            Indexer name.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.items">
            <summary>
            Underlying sorted array of itmes.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1"/> class that uses the default comparer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.#ctor(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1"/> class that uses the default comparer.
            </summary>
            <param name="comparer">
            The implementation of the <see cref="T:System.Collections.Generic.IComparer`1"/> generic interface to use when comparing items, or null
            to use the default comparer for the type of the item, obtained from <see cref="T:System.Collections.Generic.Comparer`1"/>.Default.
            </param>
            <param name="equalityComparer">
            The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing the equality items,
            or null to use the default equality comparer for the type of the item, obtained from <see cref="T:C5.EqualityComparer`1"/>.Default.
            </param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.#ctor(System.Int32,System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1"/> class that uses the specified comparer.
            </summary>
            <param name="capacity">
            The initial capacity.
            </param>
            <param name="comparer">
            The implementation of the <see cref="T:System.Collections.Generic.IComparer`1"/> generic interface to use when comparing items, or null
            to use the default comparer for the type of the item, obtained from <see cref="T:System.Collections.Generic.Comparer`1"/>.Default.
            </param>
            <param name="equalityComparer">
            The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing the equality items,
            or null to use the default equality comparer for the type of the item, obtained from <see cref="T:C5.EqualityComparer`1"/>.Default.
            </param>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            This event does not fire range based events for compatability to wpf controls. It turns adds into resets.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.DetailedCollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            This event does fire range based events for efficiency.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Comparer">
            <summary>
            Gets the comparer used by underlying array.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.EqualityComparer">
            <summary>
            Gets the equality comparer used by underlying array.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1"/>.
            </summary>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1"/>.
            The collection itself cannot be null, but it can contain elements that are null, if type <typeparamref name="T"/> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Add(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.UpdateOrAdd(`0)">
            <summary>
            Updates an existing item in the <see cref="T:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1"/> with the specified item.
            The item is added if it does not already exist in the collection.
            </summary>
            <param name="item">The item to update or add.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Contains(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.CopyTo(`0[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.IndexOf(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Insert(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a contiguous range of items beginning at the specified index.
            </summary>
            <param name="index">The zero-based starting index of the items to remove.</param>
            <param name="count">The number of items to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.CollectionChanged" /> event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Psi.Visualization.Collections.ObservableSortedCollection`1.PropertyChanged" /> event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Common.AxisComputeMode">
            <summary>
            Defines computation modes
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.AxisComputeMode.Auto">
            <summary>
            Automatically computes the axis
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.AxisComputeMode.Manual">
            <summary>
            Manually computes the axis
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Common.AxisInfo">
            <summary>
            Represents data used to display axes in visualization panels.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.AxisInfo.Label">
            <summary>
            Gets or sets axis label.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.AxisInfo.Color">
            <summary>
            Gets or sets axis color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.AxisInfo.FontSize">
            <summary>
            Gets or sets axis font size.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.AxisInfo.HorizontalAlignment">
            <summary>
            Gets or sets axis horizontal alignment.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.AxisInfo.VerticalAlignment">
            <summary>
            Gets or sets axis vertical alignment.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Common.DisplayImage">
            <summary>
            Represents an displayable image based on a <see cref="T:Microsoft.Psi.Imaging.Image"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.DisplayImage.PsiImage">
            <summary>
            Gets underlying <see cref="P:Microsoft.Psi.Visualization.Common.DisplayImage.PsiImage"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.DisplayImage.RenderedFrames">
            <summary>
            Gets or sets the frame counter of rendered frames.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.DisplayImage.ReceivedFrames">
            <summary>
            Gets or sets the frame counter of received frames.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.DisplayImage.Image">
            <summary>
            Gets or sets the display image.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Common.DisplayImage.UpdateImage(Microsoft.Psi.Imaging.Image)">
            <summary>
            Update the underlying image with the specified image.
            </summary>
            <param name="image">New image.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Common.DisplayImage.UpdateImage(Microsoft.Psi.Shared{Microsoft.Psi.Imaging.Image})">
            <summary>
            Update the underlying image with the specified image.
            </summary>
            <param name="image">New image.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Common.DisplayImage.Crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crop image to specified dimensions and return newly cropped image. Does not alter current image.
            </summary>
            <param name="left">Left border of crop.</param>
            <param name="top">Top border of crop.</param>
            <param name="width">Width of crop.</param>
            <param name="height">Height of crop.</param>
            <returns>The newly cropped image.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Common.FrameCounter">
            <summary>
            Represents a frame counter (FPS).
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Common.FrameCounter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Common.FrameCounter"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Common.FrameCounter.Rate">
            <summary>
            Gets the frame rate.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Common.FrameCounter.Increment">
            <summary>
            Increments the frame rate.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Common.MarkerStyle">
            <summary>
            Defines various line styles
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.None">
            <summary>
            Represents no marker
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.Circle">
            <summary>
            Represents a circle marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.Square">
            <summary>
            Represents a square marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.UpTriangle">
            <summary>
            Represents an up triangle marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.DownTriangle">
            <summary>
            Represents a down triangle marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.Diamond">
            <summary>
            Represents a diamond marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.Plus">
            <summary>
            Represents a plus marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.Cross">
            <summary>
            Represents a cross marker style
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Common.MarkerStyle.Asterisk">
            <summary>
            Represents an asterisk marker style
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.AnimatedModel3DVisualizationObjectConfiguration">
            <summary>
            Represnts an animated model 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.AnimatedModel3DVisualizationObjectConfiguration.CameraTransform">
            <summary>
            Gets or sets the camera transform.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.AnimatedModel3DVisualizationObjectConfiguration.Source">
            <summary>
            Gets or sets the source.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.AnnotatedEventVisualizationObjectConfiguration">
            <summary>
            Represents the annotated event visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.AnnotatedEventVisualizationObjectConfiguration.textColor">
            <summary>
            The color of the text
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.AnnotatedEventVisualizationObjectConfiguration.Height">
            <summary>
            Gets or sets the annotation height.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.AnnotatedEventVisualizationObjectConfiguration.TextColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.AudioVisualizationObjectConfiguration">
            <summary>
            Represents an audio visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.AudioVisualizationObjectConfiguration.channel">
            <summary>
            The audio channel to plot
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.AudioVisualizationObjectConfiguration.Channel">
            <summary>
            Gets or sets the audio channel to plot.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.ImageVisualizationObjectBaseConfiguration">
            <summary>
            Represents an image visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.ImageVisualizationObjectBaseConfiguration.horizontalFlip">
            <summary>
            Indicates whether we will flip the image horizontally
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.ImageVisualizationObjectBaseConfiguration.stretchToFit">
            <summary>
            Indicates whether we are stretching to fit
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ImageVisualizationObjectBaseConfiguration.HorizontalFlip">
            <summary>
            Gets or sets a value indicating whether we will flip the image horizontally
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ImageVisualizationObjectBaseConfiguration.StretchToFit">
            <summary>
            Gets or sets a value indicating whether we are stretching to fit
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration">
            <summary>
            Represents an instant 3D visualization object configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration.LocalOffset">
            <summary>
            Gets or sets the local offset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration.LocalRotation">
            <summary>
            Gets or sets the local rotation.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration.LocalScale">
            <summary>
            Gets or sets the local scale.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Instant3DVisualizationObjectConfiguration.LocalTransform">
            <summary>
            Gets or sets the local transform.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.InstantVisualizationObjectConfiguration">
            <summary>
            Represents an instant visualization object configuration.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.KinectBodies3DVisualizationObjectConfiguration">
            <summary>
            Represents a Kinect bodies 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.KinectBodies3DVisualizationObjectConfiguration.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.KinectBodies3DVisualizationObjectConfiguration.InferredJointsOpacity">
            <summary>
            Gets or sets the inferred joints opacity.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.KinectBodies3DVisualizationObjectConfiguration.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.KinectDepth3DVisualizationObjectConfiguration">
            <summary>
            Represents a Kinect depth 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.KinectDepth3DVisualizationObjectConfiguration.Color">
            <summary>
            Gets or sets the mesh color.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration">
            <summary>
            Represents a plot visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.lineColor">
            <summary>
            The color of the line to draw
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.lineWidth">
            <summary>
            Stroke thickness to draw data stream with.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.markerColor">
            <summary>
            The color of the marker to draw
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.markerSize">
            <summary>
            The size of the marker to draw
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.markerStyle">
            <summary>
            The style of the marker to draw
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.rangeColor">
            <summary>
            The color in which to draw the data range.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.rangeWidth">
            <summary>
            Stroke thickness with which to draw the data range.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.yAxisComputeMode">
            <summary>
            The mode for the y axis
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.yMax">
            <summary>
            The max value for the y axis
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.yMin">
            <summary>
            The min value for the y axis
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.LineColor">
            <summary>
            Gets or sets the line color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.LineWidth">
            <summary>
            Gets or sets the line width.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.MarkerColor">
            <summary>
            Gets or sets the marker color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.MarkerSize">
            <summary>
            Gets or sets the marker size.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.MarkerStyle">
            <summary>
            Gets or sets the marker style
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.RangeColor">
            <summary>
            Gets or sets the range color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.RangeWidth">
            <summary>
            Gets or sets the range width.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.YAxisComputeMode">
            <summary>
            Gets or sets the y axis compute mode
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.YMax">
            <summary>
            Gets or sets the y max value
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.YMin">
            <summary>
            Gets or sets the y min value
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Config.PlotVisualizationObjectConfiguration.SetYRange(System.Double,System.Double)">
            <summary>
            Programmatically sets the y-axis range without altering the y-axis compute mode.
            </summary>
            <param name="yMin">The new y minimum value.</param>
            <param name="yMax">The new y maximum value.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.Points3DVisualizationObjectConfiguration">
            <summary>
            Represents a points 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Points3DVisualizationObjectConfiguration.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Points3DVisualizationObjectConfiguration.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.ScatterCoordinateSystemsVisualizationObjectConfiguration">
            <summary>
            Represents a scatter coordinate systems visualization object configuration.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.ScatterLine3DVisualizationObjectConfiguration">
            <summary>
            Represents a scatter line 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterLine3DVisualizationObjectConfiguration.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterLine3DVisualizationObjectConfiguration.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.ScatterPlanarDirectionVisualizationObjectConfiguration">
            <summary>
            Represents a scatter planar direction visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlanarDirectionVisualizationObjectConfiguration.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlanarDirectionVisualizationObjectConfiguration.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration">
            <summary>
            Represents a scatter plot visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration.XMax">
            <summary>
            Gets or sets X max.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration.XMin">
            <summary>
            Gets or sets X min.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration.YMax">
            <summary>
            Gets or sets Y max.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterPlotVisualizationObjectConfiguration.YMin">
            <summary>
            Gets or sets Y min.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration">
            <summary>
            Represents a scatter rectangle visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.height">
            <summary>
            Height of rectangle.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.lineColor">
            <summary>
            The color of the line to draw.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.lineWidth">
            <summary>
            Stroke thickness to draw data stream with.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.width">
            <summary>
            Width of rectangle.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.LineColor">
            <summary>
            Gets or sets the line color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.LineWidth">
            <summary>
            Gets or sets the line width.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.ScatterRectangleVisualizationObjectConfiguration.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.SpeechRecognitionVisualizationObjectConfiguration">
            <summary>
            Represents a speech recognition visualization object configuration.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.Sprite3DVisualizationObjectConfiguration">
            <summary>
            Represents a sprite 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Sprite3DVisualizationObjectConfiguration.Source">
            <summary>
            Gets or sets the source.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.Sprite3DVisualizationObjectConfiguration.VertexPositions">
            <summary>
            Gets or sets the vertex positions.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.StreamVisualizationObjectConfiguration">
            <summary>
            Represents a stream visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.StreamVisualizationObjectConfiguration.cursorEpsilonMs">
            <summary>
            Gets or sets the epsilon around the cursor for which we show the instant visualization
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.StreamVisualizationObjectConfiguration.streamBinding">
            <summary>
            The stream being visualized.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.StreamVisualizationObjectConfiguration.StreamBinding">
            <summary>
            Gets or sets the stream binding.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.StreamVisualizationObjectConfiguration.CursorEpsilonMs">
            <summary>
            Gets or sets the epsilon around the cursor for which we show the instant visualization
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.StringWithDurationVisualizationObjectConfiguration">
            <summary>
            Represents a string with duration visualization object configuration.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration">
            <summary>
            Represents a time interval visualization object configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.color">
            <summary>
            The color of the marker to draw
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.markerSize">
            <summary>
            The size of the marker to draw
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.threshold">
            <summary>
            The threshold for the latency visualizer
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.trackCount">
            <summary>
            The total number of tracks on which time intervals are shown in the current panel
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.trackIndex">
            <summary>
            The index in the track at which to show the time interval
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.MarkerSize">
            <summary>
            Gets or sets the marker size.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.Threshold">
            <summary>
            Gets or sets the threshold in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.TrackCount">
            <summary>
            Gets or sets the track count.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimeIntervalVisualizationObjectConfiguration.TrackIndex">
            <summary>
            Gets or sets the track index.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.TimelineVisualizationObjectConfiguration">
            <summary>
            Represents a timeline visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimelineVisualizationObjectConfiguration.SamplingTicks">
            <summary>
            Gets or sets the sampling ticks.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.TimelineVisualizationPanelConfiguration">
            <summary>
            Represents a timeline visualization panel object.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimelineVisualizationPanelConfiguration.ShowLegend">
            <summary>
            Gets or sets a value indicating whether the legend should be shown.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimelineVisualizationPanelConfiguration.ShowTimeTicks">
            <summary>
            Gets or sets a value indicating whether the time ticks should be shown.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimelineVisualizationPanelConfiguration.TimeAxis">
            <summary>
            Gets or sets the time axis.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.TimelineVisualizationPanelConfiguration.YAxis">
            <summary>
            Gets or sets the Y axis.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration">
            <summary>
            Represents a base class for visualization object configurations.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration.name">
            <summary>
            The name of the visualization object
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration.visible">
            <summary>
            Indicated whether the visualization object is visible
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration.Name">
            <summary>
            Gets or sets the name of the visualization object
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.VisualizationObjectConfiguration.Visible">
            <summary>
            Gets or sets a value indicating whether the visualization object is visible
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration">
            <summary>
            Represents a base class for visualization panel configuraions.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.height">
            <summary>
            The height of the panel
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.name">
            <summary>
            The name of the visualization panel
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.width">
            <summary>
            The width of the panel
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.Height">
            <summary>
            Gets or sets the height of the panel
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.Name">
            <summary>
            Gets or sets the name of the visualization panel name
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.VisualizationPanelConfiguration.Width">
            <summary>
            Gets or sets the width of the panel
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.XYPanel3DVisualizationObjectConfiguration">
            <summary>
            Represents a XY panel 3D visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYPanel3DVisualizationObjectConfiguration.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYPanel3DVisualizationObjectConfiguration.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.XYVisualizationPanelConfiguration">
            <summary>
            Represents the XY visualization panel configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYVisualizationPanelConfiguration.XAxis">
            <summary>
            Gets or sets X axis.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYVisualizationPanelConfiguration.XAxis2">
            <summary>
            Gets or sets second X axis.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYVisualizationPanelConfiguration.YAxis">
            <summary>
            Gets or sets Y axis.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYVisualizationPanelConfiguration.YAxis2">
            <summary>
            Gets or sets second Y axis.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Config.XYZVisualizationPanelConfiguration">
            <summary>
            Represents the XYZ visualization panel configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYZVisualizationPanelConfiguration.MajorDistance">
            <summary>
            Gets or sets the major distance
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYZVisualizationPanelConfiguration.MinorDistance">
            <summary>
            Gets or sets the minor distance
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Config.XYZVisualizationPanelConfiguration.Thickness">
            <summary>
            Gets or sets the thickness
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Converters.PsiImageToWriteableBitmapConverter">
            <summary>
            Provides a way to apply custom logic to a binding. Specifically, converting from a <see cref="T:Microsoft.Psi.Imaging.Image"/> to a <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/>
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Converters.PsiImageToWriteableBitmapConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Converters.PsiImageToWriteableBitmapConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.DataManager">
            <summary>
            Provides cached-controlled read access to data stores used by the visualization runtime.
            Manages underlying sets of <see cref="T:Microsoft.Psi.Visualization.Data.DataStoreReader"/>s and <see cref="T:Microsoft.Psi.Visualization.Data.StreamSummaryManager"/>s.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.DataManager.Instance">
            <summary>
            The singleton instance of the <see cref="T:Microsoft.Psi.Visualization.Data.DataManager"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Psi.Visualization.Data.DataManager"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.GetReader(Microsoft.Psi.Visualization.Data.StreamBinding)">
            <summary>
            Gets the simple reader for the specified stream binding.
            </summary>
            <param name="streamBinding">The stream binding.</param>
            <returns>The simple reader.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.Read``1(Microsoft.Psi.Visualization.Data.StreamBinding,Microsoft.Psi.Persistence.IndexEntry)">
            <summary>
            Reads a single message from a stream identified by a stream binding and an index entry.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="indexEntry">The index entry indicating which message to read.</param>
            <returns>The message that was read.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadIndex``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.DateTime,System.DateTime)">
            <summary>
            Creates a view of the indices identified by the matching start and end times and asychronously fills it in.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="startTime">Start time of indices to read.</param>
            <param name="endTime">End time of indices to read.</param>
            <returns>Observable view of indices.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadStream``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.DateTime,System.DateTime)">
            <summary>
            Creates a view of the messages identified by the matching start and end times and asychronously fills it in.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="startTime">Start time of messages to read.</param>
            <param name="endTime">End time of messages to read.</param>
            <returns>Observable view of data.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadStream``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.UInt32)">
            <summary>
            Creates a view of the messages identified by the matching tail count and asychronously fills it in.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="tailCount">Number of messages to included in tail.</param>
            <returns>Observable view of data.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadStream``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Creates a view of the messages identified by the matching tail range and asychronously fills it in.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="tailRange">Function to determine range included in tail.</param>
            <returns>Observable view of data.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadSummary``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.DateTime,System.DateTime,System.TimeSpan)">
            <summary>
            Gets a view over the specified time range of the cached summary data.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="startTime">The start time of the view range.</param>
            <param name="endTime">The end time of the view range.</param>
            <param name="interval">The time interval each summary value should cover.</param>
            <returns>A view over the cached summary data that covers the specified time range.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadSummary``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.TimeSpan,System.UInt32)">
            <summary>
            Gets a view over the specified time range of the cached summary data.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="interval">The time interval each summary value should cover.</param>
            <param name="tailCount">Number of items to include in view.</param>
            <returns>A view over the cached summary data that covers the specified time range.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.ReadSummary``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.TimeSpan,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Gets a view over the specified time range of the cached summary data.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="interval">The time interval each summary value should cover.</param>
            <param name="tailRange">Tail duration function. Computes the view range start time given an end time. Applies to live view mode only.</param>
            <returns>A view over the cached summary data that covers the specified time range.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataManager.Dispose(System.Boolean)">
            <summary>
            Disposes of an instance of the <see cref="T:Microsoft.Psi.Visualization.Data.DataManager"/> class.
            </summary>
            <param name="disposing">Indicates wheter the method call comes from a Dispose method (its value is true) or from its destructor (its value is false).</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.DataStoreReader">
            <summary>
            Represents an object used to read data stores. Reads data stores by reading their underlying streams.
            Attempts to batch reads through a data store where possible.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.#ctor(System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.DataStoreReader"/> class.
            </summary>
            <param name="storeName">Store name to read.</param>
            <param name="storePath">Store path to read.</param>
            <param name="simpleReaderType">Simple reader type.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.DataStoreReader.StoreName">
            <summary>
            Gets the store name to read.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.DataStoreReader.StorePath">
            <summary>
            Gets the store path to read.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.GetReader">
            <summary>
            Gets a new instance of the underlying simple reader. The instance must be disposed by the caller.
            </summary>
            <returns>The simple reader.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.Read``1(Microsoft.Psi.Visualization.Data.StreamBinding,Microsoft.Psi.Persistence.IndexEntry)">
            <summary>
            Reads a single message from a stream identified by a stream binding and an index entry.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="indexEntry">The index entry indicating which message to read.</param>
            <returns>The message that was read.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.ReadIndex``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.DateTime,System.DateTime)">
            <summary>
            Creates a view of the indices identified by the matching start and end times and asychronously fills it in.
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="startTime">Start time of indices to read.</param>
            <param name="endTime">End time of indices to read.</param>
            <returns>Observable view of indices.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.ReadStream``1(Microsoft.Psi.Visualization.Data.StreamBinding,Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Message{``0}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Creates a view of the messages identified by the matching parameters and asynchronously fills it in.
            View mode can be one of three values:
                Fixed - fixed range based on start and end times
                TailCount - sliding dynamic range that includes the tail of the underlying data based on quantity
                TailRange - sliding dynamic range that includes the tail of the underlying data based on function
            </summary>
            <typeparam name="T">The type of the message to read.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="viewMode">Mode the view will be created in</param>
            <param name="startTime">Start time of messages to read.</param>
            <param name="endTime">End time of messages to read.</param>
            <param name="tailCount">Number of messages to included in tail.</param>
            <param name="tailRange">Function to determine range included in tail.</param>
            <returns>Observable view of data.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.Run">
            <summary>
            Periodically called by the <see cref="T:Microsoft.Psi.Visualization.Data.DataManager"/> on the UI thread to give data store readers time to process read requests.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.DispatchData">
            <summary>
            Periodically called by the <see cref="T:Microsoft.Psi.Visualization.Data.DataManager"/> on the UI thread to give data store readers time dispatch data from internal buffers to views.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.DataStoreReader.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.IntervalData">
            <summary>
            Static class containing factory methods for IntervalData{T}.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData.Create``1(``0,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <typeparam name="T">The type of the interval data.</typeparam>
            <param name="value">The representative value in the range.</param>
            <param name="originatingTime">The start time of the range.</param>
            <returns>A new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData.Create``1(``0,``0,``0,System.DateTime,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <typeparam name="T">The type of the interval data.</typeparam>
            <param name="value">The representative value in the range.</param>
            <param name="minimum">The minimum value in the range.</param>
            <param name="maximum">The maximum value in the range.</param>
            <param name="originatingTime">The start time of the range.</param>
            <param name="interval">The interval of the range</param>
            <returns>A new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.IntervalData`1">
            <summary>
            Struct representing a summary of data over a time span.
            </summary>
            <typeparam name="T">The type of the interval data.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <param name="value">The representative value in the range.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.#ctor(`0,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <param name="value">The representative value in the range.</param>
            <param name="originatingTime">The start time of the range.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.#ctor(`0,`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <param name="value">The representative value in the range.</param>
            <param name="minimum">The minimum value in the range.</param>
            <param name="maximum">The maximum value in the range.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.#ctor(`0,`0,`0,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <param name="value">The representative value in the range.</param>
            <param name="minimum">The minimum value in the range.</param>
            <param name="maximum">The maximum value in the range.</param>
            <param name="originatingTime">The start time of the range.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.#ctor(`0,`0,`0,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> struct.
            </summary>
            <param name="value">The representative value in the range.</param>
            <param name="minimum">The minimum value in the range.</param>
            <param name="maximum">The maximum value in the range.</param>
            <param name="originatingTime">The start time of the range.</param>
            <param name="interval">The interval of the range</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IntervalData`1.EndTime">
            <summary>
            Gets the end time of the range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IntervalData`1.Interval">
            <summary>
            Gets the interval of the range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IntervalData`1.Maximum">
            <summary>
            Gets the maximum value in the range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IntervalData`1.Minimum">
            <summary>
            Gets the minimum value in the range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IntervalData`1.OriginatingTime">
            <summary>
            Gets the start time of the range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IntervalData`1.Value">
            <summary>
            Gets the representative value in the range.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.op_Equality(Microsoft.Psi.Visualization.Data.IntervalData{`0},Microsoft.Psi.Visualization.Data.IntervalData{`0})">
            <summary>
            Determines whether two instances are equal
            </summary>
            <param name="first">The first object to compare</param>
            <param name="second">The object to compare to</param>
            <returns>True if the instances are equal</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.op_Inequality(Microsoft.Psi.Visualization.Data.IntervalData{`0},Microsoft.Psi.Visualization.Data.IntervalData{`0})">
            <summary>
            Determines whether two instances are equal
            </summary>
            <param name="first">The first object to compare</param>
            <param name="second">The object to compare to</param>
            <returns>True if the instances are equal</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IntervalData`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.IPool">
            <summary>
            Represents an allocation pool for a set of shared objects.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IPool.GetOrCreate">
            <summary>
            Gets, or creates if none exist, an instance of a shared object.
            </summary>
            <returns>Instance of a shared object.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.IStreamAdapter">
            <summary>
            Represents an object that adapts messages from one type to another.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamAdapter.Pool">
            <summary>
            Gets the shared allocation pool.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamAdapter.DestinationType">
            <summary>
            Gets the destination type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamAdapter.SourceType">
            <summary>
            Gets the source type.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.IStreamReader">
            <summary>
            Represents an object used to read streams.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.IsCanceled">
            <summary>
            Gets a value indicating whether this reader has been canceled.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.ReadRequests">
            <summary>
            Gets a list of outstanding read requests.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.StreamAdapterType">
            <summary>
            Gets the stream adapter type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.StreamBinding">
            <summary>
            Gets the stream binding.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.StreamName">
            <summary>
            Gets the stream name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.StoreName">
            <summary>
            Gets the store name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamReader.StorePath">
            <summary>
            Gets the store path.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.Cancel">
            <summary>
            Cancels this reader.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.CompleteReadRequest(System.DateTime,System.DateTime)">
            <summary>
            Completes the any read requests identified by the matching start and end times.
            </summary>
            <param name="startTime">Start time of read requests to complete.</param>
            <param name="endTime">End time of read requests to complete.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.DispatchData">
            <summary>
            Dispatches read data to clients of this reader. Called by <see cref="T:Microsoft.Psi.Visualization.Data.DataStoreReader"/> on the UI thread to populate data cache.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.OpenStream(Microsoft.Psi.Data.ISimpleReader)">
            <summary>
            Open stream given a reader.
            </summary>
            <param name="reader">Reader to open stream with.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.Read``1(Microsoft.Psi.Data.ISimpleReader,Microsoft.Psi.Persistence.IndexEntry)">
            <summary>
            Reads a single message from a stream identified by a reader and an index entry.
            </summary>
            <typeparam name="TItem">The type of the message to read.</typeparam>
            <param name="reader">The reader to read from.</param>
            <param name="indexEntry">The index entry indicating which message to read.</param>
            <returns>The message that was read.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.ReadIndex(System.DateTime,System.DateTime)">
            <summary>
            Creates a view of the indices identified by the matching start and end times and asychronously fills it in.
            </summary>
            <param name="startTime">Start time of indices to read.</param>
            <param name="endTime">End time of indices to read.</param>
            <returns>Observable view of indices.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamReader.ReadStream``1(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Message{``0}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Creates a view of the messages identified by the matching parameters and asynchronously fills it in.
            View mode can be one of three values:
                Fixed - fixed range based on start and end times
                TailCount - sliding dynamic range that includes the tail of the underlying data based on quantity
                TailRange - sliding dynamic range that includes the tail of the underlying data based on function
            </summary>
            <typeparam name="TItem">The type of the message to read.</typeparam>
            <param name="viewMode">Mode the view will be created in</param>
            <param name="startTime">Start time of messages to read.</param>
            <param name="endTime">End time of messages to read.</param>
            <param name="tailCount">Number of messages to included in tail.</param>
            <param name="tailRange">Function to determine range included in tail.</param>
            <returns>Observable view of data.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.IStreamSummary">
            <summary>
            Represents the summarized data of a stream generated from a specified summarizer type.
            Incoming data is summarized over a fixed interval and the resulting summarized values
            are stored in the cache as <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> items.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamSummary.Interval">
            <summary>
            Gets the time interval over which summary <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> values are calculated.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamSummary.Parameters">
            <summary>
            Gets an optional list of parameters that may be passed to the summarizer on creation. These
            typically control and/or alter the way the summarizer computes the summary values, and
            will be specific to the summarizer class specified in <see cref="P:Microsoft.Psi.Visualization.Data.IStreamSummary.SummarizerType"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.IStreamSummary.SummarizerType">
            <summary>
            Gets the class type of the summarizer that will be used to generate the cached values.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamSummary.DispatchData">
            <summary>
            Method to dispatch summarized data computed in the background to the observable cache.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamSummary.ReadSummary``1(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{``0}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Gets a view over the specified time range of the cached summary data.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="viewMode">The view mode, which may be either fixed or live data.</param>
            <param name="startTime">The start time of the view range.</param>
            <param name="endTime">The end time of the view range.</param>
            <param name="tailCount">Not yet supported and should be set to zero.</param>
            <param name="tailRange">Tail duration function. Computes the view range start time given an end time. Applies to live view mode only.</param>
            <returns>A view over the cached summary data that covers the specified time range.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.IStreamSummary.Search``1(System.DateTime,Microsoft.Psi.Visualization.Data.StreamSummarySearchMode)">
            <summary>
            Searches the summary data for an interval that includes the specified time point. The supplied search mode
            defines whether an exact match is required, or whether the next or previous interval is returned should
            there be no interval that contains the specified time point.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="time">The time to search for.</param>
            <param name="mode">
            The search mode which determines whether to require an exact match, or to return the previous
            or next adjacent <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> if no exact match was found.
            </param>
            <returns>An <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> that matches the search for <paramref name="time"/>.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.ISummarizer">
            <summary>
            Represents summarizers that perform interval-based data summarization over a series of data values.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.ISummarizer.DestinationType">
            <summary>
            Gets the destination data type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.ISummarizer.SourceType">
            <summary>
            Gets the source data type.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.ISummarizer`2">
            <summary>
            Represents summarizers that perform interval-based data summarization over a series of data values.
            </summary>
            <typeparam name="TSrc">The source data type.</typeparam>
            <typeparam name="TDest">The summarized data type.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.ISummarizer`2.Combine(Microsoft.Psi.Visualization.Data.IntervalData{`1},Microsoft.Psi.Visualization.Data.IntervalData{`1})">
            <summary>
            Combines two coincident or overlapping <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> values into a single value,
            the computation of which is implementation-specific and defined by the derived class.
            </summary>
            <param name="left">The first value to combine.</param>
            <param name="right">The second value to combine.</param>
            <returns>The combined value.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.ISummarizer`2.Summarize(System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{`0}},System.TimeSpan)">
            <summary>
            Summarizes data items into a series of summary values each spanning a time span no greater
            than the specified interval.
            </summary>
            <param name="items">The data items to be summarized.</param>
            <param name="interval">The time interval each summary value should cover.</param>
            <returns>A list of <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> values each containing summarized data.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.PoolManager">
            <summary>
            Represents a singleton object that manages a set of shared object allocation pools based on object type.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.PoolManager.Instance">
            <summary>
            The singleton instance of the <see cref="T:Microsoft.Psi.Visualization.Data.PoolManager"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.PoolManager.GetPool``1">
            <summary>
            Gets (or creates) a shared object allocation pool for an indicated type.
            </summary>
            <typeparam name="T">The type of objects the pool will allocate.</typeparam>
            <returns>A shared object allocation pool of the indicated type.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.Pool`1">
            <summary>
            Represents an allocation pool for a set of shared objects.
            </summary>
            <typeparam name="T">The type of shared object.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Pool`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.Pool`1"/> class.
            </summary>
            <param name="allocator">Allocation function.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Pool`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Pool`1.GetOrCreate">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.StreamAdapter`2">
            <summary>
            Represents an object that adapts messages from one type to another.
            </summary>
            <typeparam name="TSrc">The type of the source message.</typeparam>
            <typeparam name="TDest">The type of the destination message.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.StreamAdapter`2.Default">
            <summary>
            Gets default stream adapater.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamAdapter`2.#ctor(System.Func{`0,Microsoft.Psi.Envelope,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamAdapter`2"/> class.
            </summary>
            <param name="adapter">Adapter function</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamAdapter`2.Allocator">
            <summary>
            Gets the allocator.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamAdapter`2.DestinationType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamAdapter`2.Pool">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamAdapter`2.SourceType">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamAdapter`2.AdaptData(`0)">
            <summary>
            Adapts source data to destination data.
            </summary>
            <param name="data">Source data.</param>
            <returns>Destination data.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamAdapter`2.AdaptReceiver(System.Action{`1,Microsoft.Psi.Envelope})">
            <summary>
            Adapts a source message receiver to a destination message receiver.
            </summary>
            <param name="receiver">Source message receiver.</param>
            <returns>Destination message receiver.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamAdapter`2.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.StreamBinding">
            <summary>
            Represents information needed to uniquely identify and open a stream.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamBinding.#ctor(System.String,System.String,System.String,System.String,System.Type,System.Type,System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamBinding"/> class.
            </summary>
            <param name="streamName">The stream name.</param>
            <param name="partitionName">The partition name.</param>
            <param name="storeName">The store name.</param>
            <param name="storePath">The store path.</param>
            <param name="simpleReaderType">The simple reader type for the underlying store.</param>
            <param name="streamAdapterType">The type of the stream adapter, null if there is none.</param>
            <param name="summarizerType">The type of the stream summarizer, null if there is none.</param>
            <param name="summarizerArgs">The arguments used when constructing the stream summarizer, null if ther is none.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamBinding.#ctor(System.String,System.String,System.String,System.String,System.Type,System.String,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamBinding"/> class.
            </summary>
            <param name="streamName">The stream name.</param>
            <param name="partitionName">The partition name.</param>
            <param name="storeName">The store name.</param>
            <param name="storePath">The store path.</param>
            <param name="simpleReaderType">The simple reader type for the underlying store.</param>
            <param name="streamAdapterTypeName">The type name of the stream adapter, null if there is none.</param>
            <param name="summarizerTypeName">The type name of the stream summarizer, null if there is none.</param>
            <param name="summarizerArgs">The arguments used when constructing the stream summarizer, null if ther is none.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamBinding.#ctor(Microsoft.Psi.Visualization.Data.StreamBinding,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamBinding"/> class.
            </summary>
            <param name="source">An existing stream binding to clone.</param>
            <param name="storeName">The store name.</param>
            <param name="storePath">The store path.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamBinding.#ctor(Microsoft.Psi.Visualization.Data.StreamBinding,System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamBinding"/> class.
            </summary>
            <param name="source">An existing stream binding to clone.</param>
            <param name="summarizerType">The type of the stream summarizer, null if there is none.</param>
            <param name="summarizerArgs">The arguments used when constructing the stream summarizer, null if ther is none.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.StreamName">
            <summary>
            Gets stream name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.PartitionName">
            <summary>
            Gets partition name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.StoreName">
            <summary>
            Gets store name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.StorePath">
            <summary>
            Gets store path.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.StreamAdapter">
            <summary>
            Gets stream adapater.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.StreamAdapterType">
            <summary>
            Gets stream adapter type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.SimpleReaderType">
            <summary>
            Gets stream adapter type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.Summarizer">
            <summary>
            Gets summarizer.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.SummarizerArgs">
            <summary>
            Gets summarizer arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.SummarizerType">
            <summary>
            Gets summaraizer type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.StreamAdapterTypeName">
            <summary>
            Gets or sets stream adapter type name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.SimpleReaderTypeName">
            <summary>
            Gets or sets the SimpleReader type name
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamBinding.SummarizerTypeName">
            <summary>
            Gets or sets summarizer type name.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.StreamReader`1">
            <summary>
            Represents an object used to read streams.
            </summary>
            <typeparam name="T">The type of messages in stream.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.StreamReader`1.needsDisposing">
            <summary>
            Flag indicating whether underlying type needs disposing when removed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.#ctor(Microsoft.Psi.Visualization.Data.StreamBinding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamReader`1"/> class.
            </summary>
            <param name="streamBinding">Stream binding used to indentify stream.</param>
            <param name="useIndex">Indicates stream reader should use index for access.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.Allocator">
            <summary>
            Gets shared allocator.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.IsCanceled">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.ReadRequests">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.StreamAdapterType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.StreamBinding">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.StreamName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.StoreName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamReader`1.StorePath">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.Cancel">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.CompleteReadRequest(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.DispatchData">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.OpenStream(Microsoft.Psi.Data.ISimpleReader)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.Read``1(Microsoft.Psi.Data.ISimpleReader,Microsoft.Psi.Persistence.IndexEntry)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.ReadIndex(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamReader`1.ReadStream``1(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Message{``0}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.StreamSummaryManager">
            <summary>
            Represents the summarizations for a specific stream.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummaryManager.#ctor(System.String,System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamSummaryManager"/> class.
            </summary>
            <param name="storeName">Store name to summarize.</param>
            <param name="storePath">Store path to summarize.</param>
            <param name="streamName">Stream Name to summarize.</param>
            <param name="streamAdapterType">Stream adapter type.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummaryManager.StoreName">
            <summary>
            Gets the store name to summarize.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummaryManager.StorePath">
            <summary>
            Gets the store path to summarize.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummaryManager.StreamName">
            <summary>
            Gets the stream name to summarize.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummaryManager.StreamAdapterType">
            <summary>
            Gets the stream adapater type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummaryManager.MaxSummaryInterval">
            <summary>
            Gets the maximum summary interval.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummaryManager.DispatchData">
            <summary>
            Periodically called by the <see cref="T:Microsoft.Psi.Visualization.Data.DataManager"/> on the UI thread to give stream summary managers time dispatch data from internal buffers to views.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummaryManager.FindNextDataPoint``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.DateTime,System.TimeSpan)">
            <summary>
            Finds the time of the next data point after the point indicated by the given time.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="time">Time of current data point.</param>
            <param name="interval">The time interval each summary value covers.</param>
            <returns>Time of the next data point.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummaryManager.FindPreviousDataPoint``1(Microsoft.Psi.Visualization.Data.StreamBinding,System.DateTime,System.TimeSpan)">
            <summary>
            Finds the time of the previous data point before the point indicated by the given time.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="time">Time of current data point.</param>
            <param name="interval">The time interval each summary value covers.</param>
            <returns>Time of the previous data point.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummaryManager.ReadSummary``1(Microsoft.Psi.Visualization.Data.StreamBinding,Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{``0}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.TimeSpan,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Gets a view over the specified time range of the cached summary data.
            </summary>
            <typeparam name="T">The summary data type.</typeparam>
            <param name="streamBinding">The stream binding inidicating which stream to read from.</param>
            <param name="viewMode">The view mode, which may be either fixed or live data.</param>
            <param name="startTime">The start time of the view range.</param>
            <param name="endTime">The end time of the view range.</param>
            <param name="interval">The time interval each summary value should cover.</param>
            <param name="tailCount">Not yet supported and should be set to zero.</param>
            <param name="tailRange">Tail duration function. Computes the view range start time given an end time. Applies to live view mode only.</param>
            <returns>A view over the cached summary data that covers the specified time range.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.StreamSummarySearchMode">
            <summary>
            An enumeration that defines the different modes for searching a stream summary.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.StreamSummarySearchMode.Exact">
            <summary>
            Specifies a search mode that requires a match, otherwise no result is returned.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.StreamSummarySearchMode.Previous">
            <summary>
            Specifies a search mode that will return the previous value in the stream summary, if an exact match was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Data.StreamSummarySearchMode.Next">
            <summary>
            Specifies a search mode that will return the next value in the stream summary, if an exact match was not found.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.StreamSummary`2">
            <summary>
            Represents the summarized data of a stream generated from a specified summarizer type.
            Incoming data is summarized over a fixed interval and the resulting summarized values
            are stored in the cache as <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> items.
            </summary>
            <typeparam name="TSrc">The type of stream messages.</typeparam>
            <typeparam name="TDest">The type of the summarized interval data.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.#ctor(Microsoft.Psi.Visualization.Data.StreamBinding,System.TimeSpan,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.StreamSummary`2"/> class.
            </summary>
            <param name="streamBinding">Stream binding indicating which stream to summarize.</param>
            <param name="interval">The time interval over which summary <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData"/> values are calculated.</param>
            <param name="maxCacheSize">The maximum amount of data to cache before purging older summarized data.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummary`2.Interval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummary`2.Parameters">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummary`2.SummarizerType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummary`2.StreamBinding">
            <summary>
            Gets ths stream binding.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.StreamSummary`2.IsCanceled">
            <summary>
            Gets a value indicating whether the stream summarizer has been canceled.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.Cancel">
            <summary>
            Cancels this stream summarizer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.DispatchData">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.ReadSummary``1(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{``0}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.Search``1(System.DateTime,Microsoft.Psi.Visualization.Data.StreamSummarySearchMode)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.GetCachedSummaryView(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{`1}}.ObservableKeyedView.ViewMode,System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime})">
            <summary>
            Returns a view over the summary data and ensure that the view is preserved in the cache.
            </summary>
            <param name="viewMode">The view mode.</param>
            <param name="startTime">Start stime of the view.</param>
            <param name="endTime">End time of the view.</param>
            <param name="tailCount">Number of items to include in view.</param>
            <param name="tailRange">Tail duration function.</param>
            <returns>The requested summary view.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.PurgeStreamViews">
            <summary>
            Removes stale stream views which are no longer needed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.StreamSummary`2.PurgeSummaryViews(System.Tuple{System.DateTime,System.DateTime,System.UInt32,System.Func{System.DateTime,System.DateTime}},Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{`1}}.ObservableKeyedView)">
            <summary>
            Purges the cache of summary views which do not include the specified protected range, but
            only if the total number of underlying data items across all the views exceeds the limit.
            </summary>
            <param name="protectedViewKey">The key associated with the protected view.</param>
            <param name="protectedView">The protected view.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Data.Summarizer`2">
            <summary>
            Base class for summarizers that perform interval-based data summarization over a series of data values.
            </summary>
            <typeparam name="TSrc">The source data type.</typeparam>
            <typeparam name="TDest">The summarized data type.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Summarizer`2.#ctor(System.Func{System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{`0}},System.TimeSpan,System.Collections.Generic.List{Microsoft.Psi.Visualization.Data.IntervalData{`1}}},System.Func{Microsoft.Psi.Visualization.Data.IntervalData{`1},Microsoft.Psi.Visualization.Data.IntervalData{`1},Microsoft.Psi.Visualization.Data.IntervalData{`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Data.Summarizer`2"/> class.
            </summary>
            <param name="summarizer">The summarizer function.</param>
            <param name="combiner">The combiner function.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.Summarizer`2.DestinationType">
            <summary>
            Gets the destination data type.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Data.Summarizer`2.SourceType">
            <summary>
            Gets the source data type.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Summarizer`2.DefaultCombiner(Microsoft.Psi.Visualization.Data.IntervalData{`1},Microsoft.Psi.Visualization.Data.IntervalData{`1})">
            <summary>
            Default method for combining two <see cref="T:Microsoft.Psi.Visualization.Data.IntervalData`1"/> values.
            </summary>
            <param name="left">The first value to combine.</param>
            <param name="right">The second value to combine.</param>
            <returns>The combined value.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Summarizer`2.GetIntervalStartTime(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the start time of the bucketized interval which contains the supplied time point.
            Intervals are bucketized based on their tick count.
            </summary>
            <param name="time">The time point to lookup.</param>
            <param name="interval">The interval duration.</param>
            <returns>The start time of the bucketized interval.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Summarizer`2.Combine(Microsoft.Psi.Visualization.Data.IntervalData{`1},Microsoft.Psi.Visualization.Data.IntervalData{`1})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Data.Summarizer`2.Summarize(System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{`0}},System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Extensions.ColorExtensions">
            <summary>
            Extension methods for use with <see cref="T:System.Drawing.Color"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.ColorExtensions.ToMediaColor(System.Drawing.Color)">
            <summary>
            Converts System.Drawing.Color to System.Windows.Media.Color.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>The converted color.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.ColorExtensions.ToMediaBrush(System.Drawing.Color)">
            <summary>
            Converts System.Drawing.Color to System.Windows.Media.Brush.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>The converted brush.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Extensions.DependencyObjectExtensions">
            <summary>
            Extension methods for use with <see cref="T:System.Windows.DependencyObject"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.DependencyObjectExtensions.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds a child of a given item in the visual tree.
            </summary>
            <param name="parent">A direct parent of the queried item.</param>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="name">x:Name or Name of child. </param>
            <returns>The first parent item that matches the submitted type parameter.
            If not matching item can be found, a null parent is being returned.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Extensions.MathNetExtensions">
            <summary>
            Extension methods for use with MathNet.Spatial.Euclidean objects.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.MathNetExtensions.GetMatrix3D(MathNet.Spatial.Euclidean.CoordinateSystem)">
            <summary>
            Converts coordinate system to 3D Matrix.
            </summary>
            <param name="cs">Coordinate system to convert.</param>
            <returns>The converted matrix.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.MathNetExtensions.ToPoint3D(MathNet.Spatial.Euclidean.Point3D)">
            <summary>
            Convert MathNet.Spatial.Euclidean.Point3D to System.Windows.Media.Media3D.Point3D
            </summary>
            <param name="point">The point to convert.</param>
            <returns>The converted point.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.MathNetExtensions.ToVector3D(MathNet.Spatial.Euclidean.Vector3D)">
            <summary>
            Convert MathNet.Spatial.Euclidean.Vector3D to System.Windows.Media.Media3D.Vector3D
            </summary>
            <param name="vector">The vector to convert.</param>
            <returns>The converted vector.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Extensions.VisualizationExtensions">
            <summary>
            Extension methods for use with visualizations.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.VisualizationExtensions.ToArray``2(Microsoft.Psi.IProducer{``1})">
            <summary>
            Converts stream of enumerables of T to a stream of arrays of T,
            </summary>
            <typeparam name="T">The type of enumerable elements.</typeparam>
            <typeparam name="EnumerableT">The type of enumerable.</typeparam>
            <param name="source">The stream of enumerables of T.</param>
            <returns>A stream of the converted array of T.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.VisualizationExtensions.Values``2(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>
            Converts stream of dictionarys of TKey and TValue to a stream of collections of TValue
            </summary>
            <typeparam name="TKey">The type of dictionary keys.</typeparam>
            <typeparam name="TValue">The type of dictionary values.</typeparam>
            <param name="source">The stream of dictionarys of TKey and TValue.</param>
            <returns>A stream of the converted collections of TValue.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.VisualizationExtensions.ToScatterPoints2D``1(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,MathNet.Spatial.Euclidean.Point2D}})">
            <summary>
            Converts stream of dictionarys of 2d points to a stream of list of named points
            </summary>
            <typeparam name="TKey">The type of dictionary keys.</typeparam>
            <param name="source">The stream of dictionarys of 2d points.</param>
            <returns>A stream of the converted list of named points.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Extensions.VisualizationExtensions.ToScatterRectangle``1(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,System.Drawing.Rectangle}})">
            <summary>
            Converts stream of dictionarys of rectangles to a stream of list of named rectangles
            </summary>
            <typeparam name="TKey">The type of dictionary keys.</typeparam>
            <param name="source">The stream of dictionarys of rectangles.</param>
            <returns>A stream of the converted list of named rectangles.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Input.WaitCursor">
            <summary>
            Displays wait cursor during lengthy operations. Uses dispose pattern to clean up.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Input.WaitCursor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Input.WaitCursor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Input.WaitCursor.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigationMode">
            <summary>
            Represents navigation modes.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Navigation.NavigationMode.Live">
            <summary>
            Live navigation mode.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Navigation.NavigationMode.Playback">
            <summary>
            Playback navigation mode.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.Navigator">
            <summary>
            Class implements the time Navigator view model
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Navigation.Navigator.zoomToSelectionPadding">
            <summary>
            The padding (in percentage) when performing a zoom to selection. The resulting view
            will be larger than the selection by this percentage
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Navigation.Navigator"/> class.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Navigation.Navigator.NavigationModeChanged">
            <summary>
            Occurs when the navigation mode changes.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Navigation.Navigator.CursorChanged">
            <summary>
            Occurs when the cursor changes.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.Cursor">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.DataRange">
            <summary>
            Gets the data range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.HasFiniteRange">
            <summary>
            Gets a value indicating whether the navigator has a finite range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.NavigationMode">
            <summary>
            Gets or sets the navigation mode.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.SelectionRange">
            <summary>
            Gets the selection range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.ViewRange">
            <summary>
            Gets the view range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomToSelectionPadding">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.Microsoft#Psi#Visualization#Server#IRemoteNavigator#DataRange">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.Microsoft#Psi#Visualization#Server#IRemoteNavigator#SelectionRange">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.Microsoft#Psi#Visualization#Server#IRemoteNavigator#ViewRange">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.Navigator.Microsoft#Psi#Visualization#Server#IRemoteNavigator#NavigationMode">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.Play(System.Double)">
            <summary>
            Animates the navigator curor based on indicated speed.
            </summary>
            <param name="speed">The speed to animate the cursor. Default is 1.0.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.StopPlaying">
            <summary>
            Stop annimating the navigator cursor.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.Zoom(System.DateTime,System.DateTime)">
            <summary>
            Zoom to a particular location
            </summary>
            <param name="start">The start of the time interval to zoom to.</param>
            <param name="end">The end of the time interval to zoom to.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomAroundCenter(System.Double)">
            <summary>
            Zoom by a ratio.
            </summary>
            <param name="ratio">The ratio to zoom at.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomAroundCenter(System.TimeSpan)">
            <summary>
            Zoom to a certain view duration
            </summary>
            <param name="viewDuration">The timespan to zoom to.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomAroundCursor(System.Double)">
            <summary>
            Zooms to cursor.
            </summary>
            <param name="ratio">The ratio to zoom at.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomAroundCursor(System.TimeSpan)">
            <summary>
            Zoom to cursor.
            </summary>
            <param name="viewDuration">The duration of the time interval to zoom to.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomIn">
            <summary>
            Zoom in
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomOut">
            <summary>
            Zoom out
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomToDataRange">
            <summary>
            Zooms out to the maximum extent of data
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.ZoomToSelection">
            <summary>
            Zooms to selection
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.Navigator.UpdateLiveExtents(System.DateTime)">
            <summary>
            Updates the live mode extents based on the current time.
            </summary>
            <param name="currentTime">The current time.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorModeChangedHandler">
            <summary>
            Represents the method that will handle an event that has navigator changed event data.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An object that contains navigator changed event data.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorModeChangedEventArgs">
            <summary>
            Represents event data for when the navigator mode change event is raised.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorModeChangedEventArgs.#ctor(Microsoft.Psi.Visualization.Navigation.NavigationMode,Microsoft.Psi.Visualization.Navigation.NavigationMode)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Navigation.NavigatorModeChangedEventArgs" /> class.</summary>
            <param name="originalValue">The original value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorModeChangedEventArgs.OriginalValue">
            <summary>
            Gets the original value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorModeChangedEventArgs.NewValue">
            <summary>
            Gets the new value.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorRange">
            <summary>
            Represents a time range used by the navigator.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Navigation.NavigatorRange"/> class.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Visualization.Navigation.NavigatorRange.RangeChanged">
            <summary>
            Occurs when the navigator range has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorRange.Duration">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorRange.EndTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorRange.IsFinite">
            <summary>
            Gets a value indicating whether the navigator range is finite.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorRange.StartTime">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorRange.SetRange(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorRange.SetRange(System.DateTime,System.TimeSpan)">
            <summary>
            Sets the range.
            </summary>
            <param name="startTime">Start time of the range.</param>
            <param name="duration">Duration of the range.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorRange.SetRange(Microsoft.Psi.TimeInterval)">
            <summary>
            Sets the range.
            </summary>
            <param name="timeInterval">Time interval to set the range with.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedHandler">
            <summary>
            Represents the method that will handle an event that has navigator changed event data.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An object that contains navigator changed event data.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs">
            <summary>Provides data for the <see cref="T:Microsoft.Psi.Visualization.Navigation.Navigator" /> changed events.</summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs.#ctor(System.DateTime,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs" /> class.</summary>
            <param name="originalTime">The original value.</param>
            <param name="newTime">The new value.</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs.OriginalTime">
            <summary>
            Gets the original value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs.NewTime">
            <summary>
            Gets the new value.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedHandler">
            <summary>
            Represents the method that will handle an event that has navigator changed event data.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An object that contains navigator changed event data.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs">
            <summary>Provides data for the <see cref="T:Microsoft.Psi.Visualization.Navigation.NavigatorRange" /> changed events.</summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs.#ctor(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs"/> class.
            </summary>
            <param name="originalStartTime">The original start time</param>
            <param name="newStartTime">The new start time</param>
            <param name="originalEndTime">The original end time</param>
            <param name="newEndTime">The new end time</param>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs.OriginalStartTime">
            <summary>
            Gets the original start time
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs.NewStartTime">
            <summary>
            Gets the new start time
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs.OriginalEndTime">
            <summary>
            Gets the original end time
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Navigation.NavigatorTimeRangeChangedEventArgs.NewEndTime">
            <summary>
            Gets the new end time
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Serialization.Instant3DVisualizationObjectContractResolver">
            <summary>
            Contract resolver that mitigates issues when resolving MathNet.Spatial.Euclidean.Vector3D properties.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Serialization.Instant3DVisualizationObjectContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.ComHelper">
            <summary>
            Represents helper methods used when implementing a COM server.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ComHelper.RegasmRegisterLocalServer(System.Type)">
            <summary>
            Register the component as a local server.
            </summary>
            <param name="t">Type of the local server.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ComHelper.RegasmUnregisterLocalServer(System.Type)">
            <summary>
            Unregister the component.
            </summary>
            <param name="t">Type of the local server.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.CLSCTX">
            <summary>
            Values from the CLSCTX enumeration are used in activation calls to indicate the execution contexts in which an object is to be run.
            These values are also used in calls to CoRegisterClassObject to indicate the set of execution contexts in which a class object is to
            be made available for requests to construct instances.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_INPROC_SERVER">
            <summary>
            The code that creates and manages objects of this class is a DLL that runs in the same process as the caller of the function specifying the class context.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_INPROC_HANDLER">
            <summary>
            The code that manages objects of this class is an in-process handler. This is a DLL that runs in the client process and implements client-side structures of this
            class when instances of the class are accessed remotely.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_LOCAL_SERVER">
            <summary>
            The EXE code that creates and manages objects of this class runs on same machine but is loaded in a separate process space.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_INPROC_SERVER16">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_REMOTE_SERVER">
            <summary>
            A remote context. The LocalServer32 or LocalService code that creates and manages objects of this class is run on a different computer.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_INPROC_HANDLER16">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_RESERVED1">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_RESERVED2">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_RESERVED3">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_RESERVED4">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_NO_CODE_DOWNLOAD">
            <summary>
            Disaables the downloading of code from the directory service or the Internet. This flag cannot be set at the same time as CLSCTX_ENABLE_CODE_DOWNLOAD.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_RESERVED5">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_NO_CUSTOM_MARSHAL">
            <summary>
            Specify if you want the activation to fail if it uses custom marshalling.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_ENABLE_CODE_DOWNLOAD">
            <summary>
            Enables the downloading of code from the directory service or the Internet. This flag cannot be set at the same time as CLSCTX_NO_CODE_DOWNLOAD.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_NO_FAILURE_LOG">
             <summary>
             The CLSCTX_NO_FAILURE_LOG can be used to override the logging of failures in CoCreateInstanceEx.
            
             If the ActivationFailureLoggingLevel is created, the following values can determine the status of event logging:
                 0 = Discretionary logging. Log by default, but clients can override by specifying CLSCTX_NO_FAILURE_LOG in CoCreateInstanceEx.
                 1 = Always log all failures no matter what the client specified.
                 2 = Never log any failures no matter what client specified. If the registry entry is missing, the default is 0. If you need to control customer applications,
                     it is recommended that you set this value to 0 and write the client code to override failures. It is strongly recommended that you do not set the value to 2.
                     If event logging is disabled, it is more difficult to diagnose problems.
             </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_DISABLE_AAA">
            <summary>
            Disables activate-as-activator (AAA) activations for this activation only. This flag overrides the setting of the EOAC_DISABLE_AAA flag from the
            EOLE_AUTHENTICATION_CAPABILITIES enumeration. This flag cannot be set at the same time as CLSCTX_ENABLE_AAA. Any activation where a server process would be launched
            under the caller's identity is known as an activate-as-activator (AAA) activation. Disabling AAA activations allows an application that runs under a privileged
            account (such as LocalSystem) to help prevent its identity from being used to launch untrusted components. Library applications that use activation calls should
            always set this flag during those calls. This helps prevent the library application from being used in an escalation-of-privilege security attack. This is the only
            way to disable AAA activations in a library application because the EOAC_DISABLE_AAA flag from the EOLE_AUTHENTICATION_CAPABILITIES enumeration is applied only to
            the server process and not to the library application.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_ENABLE_AAA">
            <summary>
            Enables activate-as-activator (AAA) activations for this activation only. This flag overrides the setting of the EOAC_DISABLE_AAA flag from the
            EOLE_AUTHENTICATION_CAPABILITIES enumeration. This flag cannot be set at the same time as CLSCTX_DISABLE_AAA. Any activation where a server process would be launched
            under the caller's identity is known as an activate-as-activator (AAA) activation. Enabling this flag allows an application to transfer its identity to an activated
            component.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_FROM_DEFAULT_CONTEXT">
            <summary>
            Begin this activation from the default context of the current apartment.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_ACTIVATE_32_BIT_SERVER">
            <summary>
            Activate or connect to a 32-bit version of the server; fail if one is not registered.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_ACTIVATE_64_BIT_SERVER">
            <summary>
            Activate or connect to a 64 bit version of the server; fail if one is not registered.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_INPROC">
            <summary>
            CLSCTX_INPROC_SERVER | CLSCTX_INPROC_HANDLER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_SERVER">
            <summary>
            CLSCTX_INPROC_SERVER | CLSCTX_LOCAL_SERVER | CLSCTX_REMOTE_SERVER
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.CLSCTX.CLSCTX_ALL">
            <summary>
            CLSCTX_SERVER | CLSCTX_INPROC_HANDLER
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.REGCLS">
            <summary>
            The REGCLS enumeration defines values used in CoRegisterClassObject to control the type of connections to a class object.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.REGCLS.SINGLEUSE">
            <summary>
            After an application is connected to a class object with CoGetClassObject, the class object is removed from public view so that no other applications can connect to
            it. This value is commonly used for single document interface (SDI) applications. Specifying this value does not affect the responsibility of the object application
            to call CoRevokeClassObject; it must always call CoRevokeClassObject when it is finished with an object class.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.REGCLS.MULTIPLEUSE">
            <summary>
            Multiple applications can connect to the class object through calls to CoGetClassObject. If both the REGCLS_MULTIPLEUSE and CLSCTX_LOCAL_SERVER are set in a call to
            CoRegisterClassObject, the class object is also automatically registered as an in-process server, whether CLSCTX_INPROC_SERVER is explicitly set.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.REGCLS.MULTI_SEPARATE">
             <summary>
             Useful for registering separate CLSCTX_LOCAL_SERVER and CLSCTX_INPROC_SERVER class factories through calls to CoGetClassObject. If REGCLS_MULTI_SEPARATE is set, each
             execution context must be set separately; CoRegisterClassObject does not automatically register an out-of-process server (for which CLSCTX_LOCAL_SERVER is set) as an
             in-process server. This allows the EXE to create multiple instances of the object for in-process needs, such as self embeddings, without disturbing its
             CLSCTX_LOCAL_SERVER registration. If an EXE registers a REGCLS_MULTI_SEPARATE class factory and a CLSCTX_INPROC_SERVER class factory, instance creation calls that
             specify CLSCTX_INPROC_SERVER in the CLSCTX parameter executed by the EXE would be satisfied locally without approaching the SCM. This mechanism is useful when the
             EXE uses functions such as OleCreate and OleLoad to create embeddings, but at the same does not wish to launch a new instance of itself for the self-embedding case.
             The distinction is important for embeddings because the default handler aggregates the proxy manager by default and the application should override this default
             behavior by calling OleCreateEmbeddingHelper for the self-embedding case.
            
             If your application need not distinguish between the local and inproc case, you need not register your class factory using REGCLS_MULTI_SEPARATE. In fact, the
             application incurs an extra network round trip to the SCM when it registers its MULTIPLEUSE class factory as MULTI_SEPARATE and does not register another class
             factory as INPROC_SERVER.
             </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.REGCLS.SUSPENDED">
             <summary>
             Suspends registration and activation requests for the specified CLSID until there is a call to CoResumeClassObjects. This is used typically to register the CLSIDs
             for servers that can register multiple class objects to reduce the overall registration time, and thus the server application startup time, by making a single call
             to the SCM, no matter how many CLSIDs are registered for the server.
            
             Note: This flag prevents COM activation errors from a possible race condition between an application shutting down and that application attempting to register a COM
             class.
             </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.REGCLS.SURROGATE">
            <summary>
            The class object is a surrogate process used to run DLL servers. The class factory registered by the surrogate process is not the actual class factory implemented by
            the DLL server, but a generic class factory implemented by the surrogate. This generic class factory delegates instance creation and marshaling to the class factory
            of the DLL server running in the surrogate. For further information on DLL surrogates, see the DllSurrogate registry value.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IClassFactory">
            <summary>
            You must implement this interface for every class that you register in the system registry and to which you assign a CLSID, so objects of that class can be created.
            http://msdn.microsoft.com/en-us/library/ms694364.aspx
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IClassFactory.CreateInstance(System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Creates an uninitialized object.
            </summary>
            <param name="pUnkOuter">Outer unkown.</param>
            <param name="riid">
            Reference to the identifier of the interface to be used to communicate with the newly created object. If pUnkOuter is NULL, this parameter is frequently the IID of the initializing interface.
            </param>
            <param name="ppvObject">
            Address of pointer variable that receives the interface pointer requested in riid.
            </param>
            <returns>S_OK means success.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IClassFactory.LockServer(System.Boolean)">
            <summary>
            Locks object application open in memory.
            </summary>
            <param name="fLock">If TRUE, increments the lock count; if FALSE, decrements the lock count.</param>
            <returns>S_OK means success.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.ComNative">
            <summary>
            Constants and p/Invoke methods to interoperate with COM.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.IClassFactoryIIDString">
            <summary>
            Interface Id of IClassFactory
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.IUnknownIIDString">
            <summary>
            Interface Id of IUnknown
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.IDispatchIIDString">
            <summary>
            Interface Id of IDispatch
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.CLASS_E_NOAGGREGATION">
            <summary>
            Class does not support aggregation (or class object is remote)
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.E_NOINTERFACE">
            <summary>
            No such interface supported
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.E_FAIL">
            <summary>
            Unspecified failure
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComNative.E_POINTER">
            <summary>
            Invalid pointer.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.ComServer">
             <summary>
             ComServer encapsulates the skeleton of an out-of-process COM server in C#. The class implements the singleton design pattern and it's thread-safe.
             To start the server, call CoMServer.Instance.Run(). If the server is running, the function returns directly. Inside the Run method, it registers
             the class factories for the COM classes to be exposed from the COM server, and starts the message loop to wait for the drop of lock count to zero.
             When lock count equals zero, it revokes the registrations and quits the server.
            
             The lock count of the server is incremented when a COM object is created, and it's decremented when the object is released (GC-ed).
             </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.ComServer.Instance">
            <summary>
            The singleton instance of the <see cref="T:Microsoft.Psi.Visualization.Server.ComServer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ComServer.Initialize(System.Guid,Microsoft.Psi.Visualization.Server.IClassFactory)">
            <summary>
            Initialize is responsible for registering the COM class factories for the COM classes to be exposed from the server,
            and initializing the key member variables of the COM server (e.g. mainThreadId and lockCount).
            </summary>
            <param name="clsid">The server CLSID.</param>
            <param name="factory">The server class factory.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ComServer.Uninitialize">
            <summary>
            Uninitialize is called to revoke the registration of the COM classes exposed from the server, and perform the cleanups.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ComServer.Lock">
            <summary>
            Increase the lock count
            </summary>
            <returns>The new lock count after the increment</returns>
            <remarks>The method is thread-safe.</remarks>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ComServer.Unlock">
            <summary>
            Decrease the lock count. When the lock count drops to zero, post the WM_QUIT message to the message loop in the main thread to shut down the COM server.
            </summary>
            <returns>The new lock count after the increment</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.NativeMethods">
            <summary>
            Native methods
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.NativeMethods.WM_QUIT">
            <summary>
            Indicates a request to terminate an application, and is generated when the application calls the PostQuitMessage function.
            This message causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.NativeMethods.CoRegisterClassObject(System.Guid@,Microsoft.Psi.Visualization.Server.IClassFactory,Microsoft.Psi.Visualization.Server.CLSCTX,Microsoft.Psi.Visualization.Server.REGCLS,System.UInt32@)">
            <summary>
            Registers an EXE class object with OLE so other applications can connect to it. EXE object applications should call CoRegisterClassObject on startup.
            It can also be used to register internal objects for use by the same EXE or other code (such as DLLs) that the EXE uses.
            </summary>
            <param name="rclsid">CLSID to be registered</param>
            <param name="pUnk">Pointer to the IUnknown interface on the class object whose availability is being published.</param>
            <param name="dwClsContext">Context in which the executable code is to be run.</param>
            <param name="flags">How connections are made to the class object.</param>
            <param name="lpdwRegister">Pointer to a value that identifies the class object registered.</param>
            <returns>HRESULT</returns>
            <remarks>
            PInvoking CoRegisterClassObject to register COM objects is not supported.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.NativeMethods.CoResumeClassObjects">
             <summary>
             Called by a server that can register multiple class objects to inform the SCM about all registered classes, and permits activation requests for those class objects.
             </summary>
             <returns>HRESULT</returns>
             <remarks>
             Servers that can register multiple class objects call CoResumeClassObjects once, after having first called CoRegisterClassObject, specifying
             REGCLS_LOCAL_SERVER | REGCLS_SUSPENDED for each CLSID the server supports. This function causes OLE to inform the SCM about all the registered classes, and
             begins letting activation requests into the server process.
            
             This reduces the overall registration time, and thus the server application startup time, by making a single call to the SCM, no matter how many CLSIDs are registered for
             the server. Another advantage is that if the server has multiple apartments with different CLSIDs registered in different apartments, or is a free-threaded server, no
             activation requests will come in until the server calls CoResumeClassObjects. This gives the server a chance to register all of its CLSIDs and get properly set up before having
             to deal with activation requests, and possibly shutdown requests.
             </remarks>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.NativeMethods.CoRevokeClassObject(System.UInt32)">
            <summary>
            Informs OLE that a class object, previously registered with the CoRegisterClassObject function, is no longer available for use.
            </summary>
            <param name="dwRegister">Token previously returned from the CoRegisterClassObject function</param>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.NativeMethods.GetCurrentThreadId">
            <summary>
            Get current thread ID.
            </summary>
            <returns>Thread id.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.NativeMethods.PostThreadMessage(System.UInt32,System.UInt32,System.UIntPtr,System.IntPtr)">
            <summary>
            The PostThreadMessage function posts a message to the message queue of the specified thread. It returns without waiting for the thread to process the message.
            </summary>
            <param name="idThread">Identifier of the thread to which the message is to be posted.</param>
            <param name="Msg">Specifies the type of message to be posted.</param>
            <param name="wParam">Specifies additional message-specific information (wParam).</param>
            <param name="lParam">Specifies additional message-specific information (lParam).</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.ReferenceCountedObject">
            <summary>
            Reference counted object base.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ReferenceCountedObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.Server.ReferenceCountedObject"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.ReferenceCountedObject.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Psi.Visualization.Server.ReferenceCountedObject"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.Guids">
            <summary>
            Class that contains IID and CLSID strings and GUIDs.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.INotifyRemoteConfigurationChangedIIDString">
            <summary>
            INotifyRemoteConfigurationChanged IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteNavigatorIIDString">
            <summary>
            IRemoteNavigator IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteNavigatorRangeIIDString">
            <summary>
            IRemoteNavigatorRange IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteStreamVisualizationObjectIIDString">
            <summary>
            IRemoteStreamVisualizationObject IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationContainerIIDString">
            <summary>
            IRemoteVisualizationContainer IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationObjectIIDString">
            <summary>
            IRemoteVisualizationObject IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationPanelIIDString">
            <summary>
            IRemoteVisualizationPanel IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationServiceIIDString">
            <summary>
            IRemoteVisualizationService IID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteNavigatorCLSIDString">
            <summary>
            RemoteNavigator CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteNavigatorRangeCLSIDString">
            <summary>
            RemoteNavigatorRange CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteStreamVisualizationObjectCLSIDString">
            <summary>
            RemoteStreamVisualizationObject CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationContainerCLSIDString">
            <summary>
            RemoteVisualizationContainer CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationObjectCLSIDString">
            <summary>
            RemoteVisualizationObject CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationPanelCLSIDString">
            <summary>
            RemoteVisualizationPanel CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationServiceCLSIDString">
            <summary>
            RemoteVisualizationService CLSID string.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.INotifyRemoteConfigurationChangedIID">
            <summary>
            INotifyRemoteConfigurationChanged IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteNavigatorIID">
            <summary>
            IRemoteNavigator IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteNavigatorRangeIID">
            <summary>
            IRemoteNavigatorRange IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteStreamVisualizationObjectIID">
            <summary>
            IRemoteStreamVisualizationObject IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationContainerIID">
            <summary>
            IRemoteVisualizationContainer IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationObjectIID">
            <summary>
            IRemoteVisualizationObject IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationPanelIID">
            <summary>
            IRemoteVisualizationPanel IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.IRemoteVisualizationServiceIID">
            <summary>
            IRemoteVisualizationService IID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteNavigatorCLSID">
            <summary>
            RemoteNavigator CLSID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteNavigatorRangeCLSID">
            <summary>
            RemoteNavigatorRange CLSID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteStreamVisualizationObjectCLSID">
            <summary>
            RemoteStreamVisualizationObject CLSID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationContainerCLSID">
            <summary>
            RemoteVisualizationContainer CLSID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationObjectCLSID">
            <summary>
            RemoteVisualizationObject CLSID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationPanelCLSID">
            <summary>
            RemoteVisualizationPanel CLSID Guid.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.Guids.RemoteVisualizationServiceCLSID">
            <summary>
            RemoteVisualizationService CLSID Guid.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteNavigatorRange">
            <summary>
            Represents a remote navigator range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigatorRange.Duration">
            <summary>
            Gets the range duration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigatorRange.StartTime">
            <summary>
            Gets the range start time.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigatorRange.EndTime">
            <summary>
            Gets the range end time.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteNavigatorRange.SetRange(System.DateTime,System.DateTime)">
            <summary>
            Sets the range.
            </summary>
            <param name="startTime">Start time of the range.</param>
            <param name="endTime">End time of the range.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteNavigator">
            <summary>
            Represents a remote navigator instance.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigator.Cursor">
            <summary>
            Gets or sets the cursor (position).
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigator.DataRange">
            <summary>
            Gets the data range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigator.NavigationMode">
            <summary>
            Gets or sets the navigation mode.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigator.SelectionRange">
            <summary>
            Gets the selection range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigator.ViewRange">
            <summary>
            Gets the view range.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteNavigator.ZoomToSelectionPadding">
            <summary>
            Gets or sets the zoom range selection padding.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer">
            <summary>
            Represents a remote visualization container.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer.CurrentPanel">
            <summary>
            Gets or sets the current visualization panel.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer.AddPanel(System.String)">
            <summary>
            Adds a new visualization panel of the indicated type.
            </summary>
            <param name="type">Type of new visualization panel.</param>
            <returns>An instance of the new visualization panel.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer.Clear">
            <summary>
            Clears the visualization container.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationContainer.RemovePanel(Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel)">
            <summary>
            Removes the indicated panel.
            </summary>
            <param name="panel">The visualization panel to remove.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.INotifyRemoteConfigurationChanged">
            <summary>
            Represents a notification event handler to be invoked when a configuration is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.INotifyRemoteConfigurationChanged.OnRemoteConfigurationChanged(System.String)">
            <summary>
            Invoked by the remote host when a configuration changes.
            </summary>
            <param name="jsonConfiguration">The new configuration serialized into a JSON string.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteStreamVisualizationObject">
            <summary>
            Represents a remote stream visualization object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteStreamVisualizationObject.CloseStream">
            <summary>
            Close the underlying stream.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteStreamVisualizationObject.OpenStream(System.String)">
            <summary>
            Open a stream, closing underlying stream if neeeded.
            </summary>
            <param name="jsonStreamBinding">Stream binding serialized as JSON.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel">
            <summary>
            Represents a remote visualization panel.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.Container">
            <summary>
            Gets the visualization container.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.CurrentVisualizationObject">
            <summary>
            Gets or sets the current visualization object.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.IsCurrentPanel">
            <summary>
            Gets a value indicating whether this is the current panel.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.AddVisualizationObject(System.String)">
            <summary>
            Adds a new visualization object of the indicated type.
            </summary>
            <param name="type">Type of new visualization object to add.</param>
            <returns>An instance of the new visualization object.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.AddVisualizationObject(System.String,System.String)">
            <summary>
            Adds a new visualization object of the indicated type from within the indicated assembly.
            </summary>
            <param name="assemblyPath">Assembly to find the type in.</param>
            <param name="type">Type of new visualization object to add.</param>
            <returns>An instance of the new visualization object.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.Advise(Microsoft.Psi.Visualization.Server.INotifyRemoteConfigurationChanged)">
            <summary>
            Adds advise to this remote visualization panel.
            </summary>
            <param name="notifyVisualizationPanelChanged">Advise object to add.</param>
            <returns>Advise cookie for unadvising.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.BringToFront(Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject)">
            <summary>
            Brings the indictated remote visualization object to the front of z-order within this panel.
            </summary>
            <param name="visualizationObject">The visualization object to move.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.Clear">
            <summary>
            Clears the visualization panel.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.GetConfiguration">
            <summary>
            Gets this remote visualization panel's configuration as a JSON string.
            </summary>
            <returns>The configuration serialized into a JSON string.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.RemoveVisualizationObject(Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject)">
            <summary>
            Removes the indicated visualization object.
            </summary>
            <param name="visualizationObject">The visualization object to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.SendToBack(Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject)">
            <summary>
            Sends the indictated remote visualization object to the back of z-order within this panel.
            </summary>
            <param name="visualizationObject">The visualization object to move.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.SetConfiguration(System.String)">
            <summary>
            Sets this remove visualization panel's configuration.
            </summary>
            <param name="jsonConfiguration">Configuration serialized as a JSON string.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel.Unadvise(System.UInt32)">
            <summary>
            Removes advise from this remote visualization panel.
            </summary>
            <param name="cookie">Advise cookie given when advising.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteVisualizationService">
            <summary>
            Represents a remote visualization service.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationService.CurrentContainer">
            <summary>
            Gets the visualization container.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationService.EnsureBinding(System.String)">
            <summary>
            Ensure the specified stream is currently open. If stream is not open, it will be upon retun.
            </summary>
            <param name="jsonStreamBinding">Stream binding, JSON serialized, inidicting which stream to open</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject">
            <summary>
            Represents a remote visualization object.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.Container">
            <summary>
            Gets the visualization container.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.Panel">
            <summary>
            Gets the visualization panel.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.Advise(Microsoft.Psi.Visualization.Server.INotifyRemoteConfigurationChanged)">
            <summary>
            Adds advise to this remote visualization object.
            </summary>
            <param name="notifyVisualizationObjectChanged">Advise object to add.</param>
            <returns>Advise cookie for unadvising.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.BringToFront">
            <summary>
            Brings this remote visualization object to the top of z-order within its containing panel.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.Close">
            <summary>
            Closes and removes this remote visualization object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.GetConfiguration">
            <summary>
            Gets this remote visualization object's configuration as a JSON string.
            </summary>
            <returns>The configuration serialized into a JSON string.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.SendToBack">
            <summary>
            Sends this remote visualization object to the back of z-order within its containing panel.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.SetConfiguration(System.String)">
            <summary>
            Sets this remove visualization object's configuration.
            </summary>
            <param name="jsonConfiguration">Configuration serialized as a JSON string.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject.Unadvise(System.UInt32)">
            <summary>
            Removes advise from this remote visualization object.
            </summary>
            <param name="cookie">Advise cookie given when advising.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.Server.RemoteNavigationMode">
            <summary>
            Represents remote navigation modes.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.RemoteNavigationMode.Live">
            <summary>
            Live navigation mode.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.Server.RemoteNavigationMode.Playback">
            <summary>
            Playback navigation mode.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.I3DVisualizationObject">
            <summary>
            Represents a 3D visualization object.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.I3DVisualizationObject.Visual3D">
            <summary>
            Gets the 3D visuals.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.ImageVisualizationObjectBase`1">
            <summary>
            Represents an image visualization object.
            </summary>
            <typeparam name="TData">The type of the image visualzation object.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.ImageVisualizationObjectBase`1.InitNew">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2">
            <summary>
            Represents an instant 3D visualization object.
            </summary>
            <typeparam name="TData">The type of the instant 3D visualization.</typeparam>
            <typeparam name="TConfig">The type of the instant 3D visualiztion object configuration.</typeparam>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2.DefaultViewTemplate">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2.Visual3D">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2.LocalOffsetString">
            <summary>
            Gets or sets the local offset string.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2.LocalScaleString">
            <summary>
            Gets or sets the local scale string.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2.LocalRotationString">
            <summary>
            Gets or sets the local rotation string.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.Instant3DVisualizationObject`2.ContractResolver">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2">
            <summary>
            Represents an instant visualization object.
            </summary>
            <typeparam name="TData">The type of the instant visualization</typeparam>
            <typeparam name="TConfig">The type of the instant visualization object configuration.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.indices">
            <summary>
            The indices read from the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.Indices">
            <summary>
            Gets or sets the indicies.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.OnIndiciesChanged(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Persistence.IndexEntry}.ObservableKeyedView,Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Persistence.IndexEntry}.ObservableKeyedView)">
            <summary>
            Invoked when the <see cref="P:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.Indices"/> property changes.
            </summary>
            <param name="oldValue">The old indicies value.</param>
            <param name="newValue">The new indicies value.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.OnIndiciesCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.Indices"/> collection changes.
            </summary>
            <param name="e">Data for the event.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.OnCloseStream">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.OnOpenStream">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.InstantVisualizationObject`2.SetCurrentValue(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.IStreamVisualizationObject">
            <summary>
            Represents a stream visualization object.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.IStreamVisualizationObject.CloseStream">
            <summary>
            Closes the underlying stream.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.IStreamVisualizationObject.UpdateStoreBindings(System.Collections.Generic.IEnumerable{Microsoft.Psi.Extensions.Data.IPartition})">
            <summary>
            Update the store bindings for given enumeration of partitions.
            </summary>
            <param name="partitions">The partions to update the bindings with.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.PlotVisualizationObject`1">
            <summary>
            Represents a plot visualization object.
            </summary>
            <typeparam name="TConfig">The plot visualization object configuration.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.PlotVisualizationObject`1.InitNew">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.PlotVisualizationObject`1.OnConfigurationChanged">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.PlotVisualizationObject`1.OnConfigurationPropertyChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.PlotVisualizationObject`1.OnDataCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.PlotVisualizationObject`1.OnSummaryDataCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2">
            <summary>
            Represents a stream visualization object.
            </summary>
            <typeparam name="TData">The type of the stream.</typeparam>
            <typeparam name="TConfig">The configuration of the visualizer.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.isShared">
            <summary>
            Flag inidcating whether type paramamter T is Shared{} or not.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.currentValue">
            <summary>
            The current (based on navigation cursor) value of the stream.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.cursorEpsilon">
            <summary>
            Gets or sets the epsilon around the cursor for which we show the instant visualization
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.data">
            <summary>
            The data read from the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.CurrentValue">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.CursorEpsilon">
            <summary>
            Gets the cursor epsilon.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.Data">
            <summary>
            Gets or sets the data view.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.CloseStream">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OpenStream(Microsoft.Psi.Visualization.Data.StreamBinding)">
            <summary>
            Opens a stream, closing the underlying stream if neccesary.
            </summary>
            <param name="streamBinding">The stream to open and visualize.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.Microsoft#Psi#Visualization#Server#IRemoteStreamVisualizationObject#OpenStream(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.UpdateStoreBindings(System.Collections.Generic.IEnumerable{Microsoft.Psi.Extensions.Data.IPartition})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.GetIndexForTime(System.DateTime,System.Int32,System.Func{System.Int32,System.DateTime})">
            <summary>
            Finds the index that is either exactly at currentTime, or closest to currentTime +- the CursorEpsilon.
            Uses binary search to find exact match or location where match should be.
            </summary>
            <param name="currentTime">Time to search for.</param>
            <param name="count">Number of entries to search within.</param>
            <param name="timeAtIndex">Fucntion that returns and index given a time.</param>
            <returns>Best matching index or -1 if no qualifying match was found.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.InitNew">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnCloseStream">
            <summary>
            Called when underlying stream is closed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnConfigurationChanged">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnConfigurationPropertyChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnCursorChanged(System.Object,Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnDataChanged(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Message{`0}}.ObservableKeyedView,Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Message{`0}}.ObservableKeyedView)">
            <summary>
            Called when data collection property has changed.
            </summary>
            <param name="oldValue">Old data collection.</param>
            <param name="newValue">New data collection.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnDataCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when data collection contents have changed.
            </summary>
            <param name="e">Collection changed event arguments.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnDisconnect">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.OnOpenStream">
            <summary>
            Called when underlying stream is opened.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.StreamVisualizationObject`2.SetCurrentValue(System.DateTime)">
            <summary>
            Set the current value to the value at the the indicated time.
            </summary>
            <param name="currentTime">Time to set value with.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2">
            <summary>
            Represents a timeline visualization object.
            </summary>
            <typeparam name="TData">The type of the timeline visualization.</typeparam>
            <typeparam name="TConfig">The type of the timeline visualization object configuration.</typeparam>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.summaryData">
            <summary>
            The interval data summarized from the stream data.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.SummaryData">
            <summary>
            Gets or sets the summary data view.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.OnCloseStream">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.OnConnect">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.OnDisconnect">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.OnOpenStream">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.OnSummaryDataChanged(Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{`0}}.ObservableKeyedView,Microsoft.Psi.Visualization.Collections.ObservableKeyedCache{System.DateTime,Microsoft.Psi.Visualization.Data.IntervalData{`0}}.ObservableKeyedView)">
            <summary>
            Invoked when the <see cref="P:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.SummaryData"/> property changes.
            </summary>
            <param name="oldValue">The old summary data value.</param>
            <param name="newValue">The new summary data value.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.OnSummaryDataCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.SummaryData"/> collection changes.
            </summary>
            <param name="e">Collection changed event arguments.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.TimelineVisualizationObject`2.SetCurrentValue(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer">
            <summary>
            Represents the container where all visualization panels are hosted. The is the root UI element for visualizations.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.name">
            <summary>
            The name of the container
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.navigator">
            <summary>
            The time navigator view model
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.panels">
            <summary>
            The collection of visualization Panels
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.panelsLock">
            <summary>
            multithreaded collection lock
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.currentPanel">
            <summary>
            The current visualization panel
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.CurrentPanel">
            <summary>
            Gets or sets the current visualization panel
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Name">
            <summary>
            Gets or sets the name of the container
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Navigator">
            <summary>
            Gets the current navigator
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Panels">
            <summary>
            Gets the visualization Panels.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Microsoft#Psi#Visualization#Server#IRemoteVisualizationContainer#CurrentPanel">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Microsoft#Psi#Visualization#Server#IRemoteVisualizationContainer#Navigator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Load(System.String)">
            <summary>
            Loads a visualization layout from the specified file.
            </summary>
            <param name="filename">File to load visualization layout.</param>
            <returns>The new visualization container.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.AddPanel(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.AddPanel(Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel,System.Boolean)">
            <summary>
            Adds a new panel to the container.
            </summary>
            <param name="panel">The panel to be added to the container.</param>
            <param name="isRootChild">Flag indicating whether panel is root child.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.AddPanel``1">
            <summary>
            Creates and adds a new panel to the container.
            </summary>
            <typeparam name="T">The type of panel to add.</typeparam>
            <returns>The newly added panel.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Clear">
            <summary>
            Removes all Panels from the container.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.CloseStreams">
            <summary>
            Close all streams in all visualization objects.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.RemovePanel(Microsoft.Psi.Visualization.Server.IRemoteVisualizationPanel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.RemovePanel(Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel)">
            <summary>
            Removes the indicated panel.
            </summary>
            <param name="panel">The panel to be removed from the container.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.Save(System.String)">
            <summary>
            Saves the current layout to the specified file.
            </summary>
            <param name="filename">The file to save the layout too.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.UpdateStoreBindings(System.Collections.Generic.IEnumerable{Microsoft.Psi.Extensions.Data.IPartition})">
            <summary>
            Update the store bindings with the specified enumeration of partitions.
            </summary>
            <param name="partitions">Partions to use in updating store bindings.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer.ZoomToRange(Microsoft.Psi.TimeInterval)">
            <summary>
            Zoom to the spcified time interval.
            </summary>
            <param name="timeInterval">Time interval to zoom to.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject">
            <summary>
            Base class for visualization objects
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.container">
            <summary>
            The top level visualization container this visualization object is parented under.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.panel">
            <summary>
            The visualization panel this visualization object is parented under.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.navigator">
            <summary>
            The navigator for for the container
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.DefaultViewTemplate">
            <summary>
            Gets the default DataTemplate that is used within a VisualizationPanel.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Container">
            <summary>
            Gets the parent VisualizationContainer.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Panel">
            <summary>
            Gets the parent VisualizationPanel.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Navigator">
            <summary>
            Gets the navigator this object is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Microsoft#Psi#Visualization#Server#IRemoteVisualizationObject#Navigator">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Microsoft#Psi#Visualization#Server#IRemoteVisualizationObject#Container">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Microsoft#Psi#Visualization#Server#IRemoteVisualizationObject#Panel">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Advise(Microsoft.Psi.Visualization.Server.INotifyRemoteConfigurationChanged)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.BringToFront">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Close">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.GetConfiguration">
            <inheritdoc />
            <remarks>
            This method should not be directly called or overriden by implementors. It is for internal use only.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.SendToBack">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.SetConfiguration(System.String)">
            <inheritdoc />
            <remarks>
            This method should not be directly called or overriden by implementors. It is for internal use only.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.Unadvise(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.SetParentPanel(Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel)">
            <summary>
            Called internally by the VisualizationPanel to connect the parent chain.
            </summary>
            <param name="panel">Panel to connect this visualization object to.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.InitNew">
            <summary>
            Overridable method to allow derived VisualzationObject to initialize properties as part of object construction or after deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.NotifyConfigurationChanged">
            <summary>
            Notifiy client application when configuration has changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.OnConfigurationChanged">
            <summary>
            Overridable method to allow derived VisualzationObject to react whenever the Configuration property has changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.OnConfigurationPropertyChanged(System.String)">
            <summary>
            Overridable method to allow derived VisualzationObject to react whenever a property on the Configuration property has changed.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.OnConnect">
            <summary>
            Overideable method to allow derived VisualizationObjects to react to being loaded.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.OnDisconnect">
            <summary>
            Overideable method to allow derived VisualizationObjects to react to being unloaded.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject.OnCursorChanged(System.Object,Microsoft.Psi.Visualization.Navigation.NavigatorTimeChangedEventArgs)">
            <summary>
            Overideable method to allow derived VisualizationObjects to react to cursor changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An object that contains navigator changed event data.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1">
            <summary>
            Represents a base class for visualization objects.
            </summary>
            <typeparam name="TConfig">The type of the visualization object configuration.</typeparam>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1.Configuration">
            <summary>
            Gets or sets the visualization object configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1.ContractResolver">
            <summary>
            Gets the contract resolver. Default is null.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1.GetConfiguration">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1.SetConfiguration(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1.InitNew">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject`1.OnConfigurationPropertyChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel">
            <summary>
            Represents the base class that visualization panels derive from.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.currentVisualizationObject">
            <summary>
            The current visualization object
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.visualizationObjectsLock">
            <summary>
            multithreaded collection lock
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Container">
            <summary>
            Gets the visualization container that this panel is under.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Microsoft#Psi#Visualization#Server#IRemoteVisualizationPanel#Container">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.CurrentVisualizationObject">
            <summary>
            Gets or sets the current visualization object.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Microsoft#Psi#Visualization#Server#IRemoteVisualizationPanel#CurrentVisualizationObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.DefaultViewTemplate">
            <summary>
            Gets the default view template.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Height">
            <summary>
            Gets the height of the panel
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.IsCurrentPanel">
            <summary>
            Gets a value indicating whether or not this is the current panel
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Navigator">
            <summary>
            Gets the navigator associated with this panel
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Microsoft#Psi#Visualization#Server#IRemoteVisualizationPanel#Navigator">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.VisualizationObjects">
            <summary>
            Gets the collection of data stream visualization objects.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Width">
            <summary>
            Gets the width of the panel
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.AddVisualizationObject(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.AddVisualizationObject(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.AddVisualizationObject(Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject)">
            <summary>
            Add a visualization object to the panel
            </summary>
            <param name="visualizationObject">The visualization object to be added.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.AddVisualizationObject``1">
            <summary>
            Creates and adds a visualization object of the specified type.
            </summary>
            <typeparam name="T">The type of the visualization object to add.</typeparam>
            <returns>The newly created visualization object.</returns>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Advise(Microsoft.Psi.Visualization.Server.INotifyRemoteConfigurationChanged)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.BringToFront(Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.BringToFront(Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject)">
            <summary>
            Brings a visualization object to the front.
            </summary>
            <param name="visualizationObject">The visualization object to bring to front</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.GetConfiguration">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.RemoveVisualizationObject(Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.RemoveVisualizationObject(Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject)">
            <summary>
            Removes a visualization object specified by a view model
            </summary>
            <param name="visualizationObject">The visualization object to be removed.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.SendToBack(Microsoft.Psi.Visualization.Server.IRemoteVisualizationObject)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.SendToBack(Microsoft.Psi.Visualization.VisualizationObjects.VisualizationObject)">
            <summary>
            Sends a visualization object to the back.
            </summary>
            <param name="visualizationObject">The visualization object to bring to front</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.SetConfiguration(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.Unadvise(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.SetParentContainer(Microsoft.Psi.Visualization.VisualizationObjects.VisualizationContainer)">
            <summary>
            Called internally by the VisualizationContainer to connect the parent chain.
            </summary>
            <param name="container">Container to connect this visualization panel to.</param>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.InitNew">
            <summary>
            Initializes a new visualization panel. Called by ctor and contract serializer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.NotifyConfigurationChanged">
            <summary>
            Notifiy client application when configuration has changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.OnConfigurationChanged">
            <summary>
            Overridable method to allow derived VisualzationObject to react whenever the Configuration property has changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel.OnConfigurationPropertyChanged(System.String)">
            <summary>
            Overridable method to allow derived VisualzationObject to react whenever a property on the Configuration property has changed.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1">
            <summary>
            Represents a base class for visualization panels.
            </summary>
            <typeparam name="TConfig">The type of the visualization panel configuration.</typeparam>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.Configuration">
            <summary>
            Gets or sets the visualization panel configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.Height">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.Width">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.GetConfiguration">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.SetConfiguration(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.InitNew">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.OnConfigurationChanged">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Visualization.VisualizationPanels.VisualizationPanel`1.OnConfigurationPropertyChanged(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
